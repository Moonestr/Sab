-- LocalScript: StarterPlayer > StarterPlayerScripts
-- Только для локальных тестов/демонстраций в Studio
-- Клавиша R — включить/выключить Fly
-- Камера свободно вращается вокруг клона

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local FLY_SPEED = 60
local SMOOTH = 0.12

local active = false
local cloneModel = nil
local vel = Vector3.new(0,0,0)
local keys = {}

-- Создание визуального клона
local function createVisualClone(character)
if not character then return nil end
local clone = Instance.new("Model")
clone.Name = "VisualFlyClone"
for _, obj in ipairs(character:GetDescendants()) do
if obj:IsA("BasePart") then
local p = obj:Clone()
p.Anchored = true
p.CanCollide = false
p.Parent = clone
elseif obj:IsA("Accessory") then
obj:Clone().Parent = clone
end
end
clone.Parent = Workspace
return clone
end

-- Получаем вектор движения по нажатым клавишам
local function getMoveVector()
local cam = Workspace.CurrentCamera
if not cam then return Vector3.new(0,0,0) end
local forward = cam.CFrame.LookVector
local right = cam.CFrame.RightVector
local mv = Vector3.new(0,0,0)
if keys[Enum.KeyCode.W] then mv = mv + forward end
if keys[Enum.KeyCode.S] then mv = mv - forward end
if keys[Enum.KeyCode.A] then mv = mv - right end
if keys[Enum.KeyCode.D] then mv = mv + right end
if keys[Enum.KeyCode.Space] then mv = mv + Vector3.new(0,1,0) end
if keys[Enum.KeyCode.LeftControl] then mv = mv - Vector3.new(0,1,0) end
if mv.Magnitude > 0 then mv = mv.Unit * FLY_SPEED end
return mv
end

-- Горячие клавиши
UserInputService.InputBegan:Connect(function(input, processed)
if processed then return end
if input.UserInputType == Enum.UserInputType.Keyboard then
keys[input.KeyCode] = true
if input.KeyCode == Enum.KeyCode.R then
active = not active
local char = player.Character or player.CharacterAdded:Wait()
if active then
cloneModel = createVisualClone(char)
-- Камера следует за клоном
local primary = cloneModel:FindFirstChild("HumanoidRootPart") or cloneModel:FindFirstChildWhichIsA("BasePart")
if primary then
Workspace.CurrentCamera.CameraSubject = primary
end
else
if cloneModel then
cloneModel:Destroy()
cloneModel = nil
end
-- Восстановление камеры
if char then
local hum = char:FindFirstChildOfClass("Humanoid")
if hum then Workspace.CurrentCamera.CameraSubject = hum end
end
end
end
end
end)

UserInputService.InputEnded:Connect(function(input, processed)
if input.UserInputType == Enum.UserInputType.Keyboard then
keys[input.KeyCode] = nil
end
end)

-- Основной цикл движения
RunService.RenderStepped:Connect(function(dt)
if not active or not cloneModel then return end
vel = vel:Lerp(getMoveVector(), SMOOTH)
for _, part in ipairs(cloneModel:GetChildren()) do
if part:IsA("BasePart") then
part.CFrame = part.CFrame + vel * dt
end
end
-- Камера свободно вращается вокруг клона (локально)
local primary = cloneModel:FindFirstChild("HumanoidRootPart") or cloneModel:FindFirstChildWhichIsA("BasePart")
if primary then
Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(primary.CFrame * CFrame.new(0,2,6), 0.2)
end
end)

-- Очистка при респе
player.CharacterRemoving:Connect(function()
if cloneModel then cloneModel:Destroy() cloneModel = nil end
end)
