-- // GUI SETUP
local ScreenGui = Instance.new("ScreenGui")
local GrabGunButton = Instance.new("TextButton")
local ShootButton = Instance.new("TextButton")

ScreenGui.Name = "GunGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

GrabGunButton.Name = "GrabGunButton"
GrabGunButton.Parent = ScreenGui
GrabGunButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
GrabGunButton.Position = UDim2.new(0.05, 0, 0.3, 0)
GrabGunButton.Size = UDim2.new(0, 150, 0, 40)
GrabGunButton.Font = Enum.Font.SourceSans
GrabGunButton.Text = "Grab Gun"
GrabGunButton.TextColor3 = Color3.new(1, 1, 1)
GrabGunButton.TextSize = 22

ShootButton.Name = "ShootButton"
ShootButton.Parent = ScreenGui
ShootButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ShootButton.Position = UDim2.new(0.05, 0, 0.4, 0)
ShootButton.Size = UDim2.new(0, 150, 0, 40)
ShootButton.Font = Enum.Font.SourceSans
ShootButton.Text = "Shoot Murderer"
ShootButton.TextColor3 = Color3.new(1, 1, 1)
ShootButton.TextSize = 22

-- // VARIABLES & HELPERS
local rs = game:GetService("RunService")
local localplayer = game.Players.LocalPlayer

local function getMap()
	for _, v in pairs(workspace:GetChildren()) do
		if v:FindFirstChild("Spawns") then
			return v
		end
	end
end

local function findMurderer()
	for _, player in pairs(game.Players:GetPlayers()) do
		if player ~= localplayer and player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
			return player
		end
	end
end

local function getPredictedPosition(player, shootOffset)
	local velocity = player.Character.HumanoidRootPart.AssemblyLinearVelocity
	local playerHum = player.Character:FindFirstChild("Humanoid")
	local playerMoveDirection = playerHum.MoveDirection
	local predictedPosition = player.Character.HumanoidRootPart.Position +
		((velocity * Vector3.new(0.75, 0.5, 0.75))) * (shootOffset / 15) +
		playerMoveDirection * shootOffset
	predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((1.5 - 1) * 0.01)) + 1)
	return predictedPosition
end

-- // GRAB GUN FUNCTION
local function grabGun()
	local map = getMap()
	if not map or not map:FindFirstChild("GunDrop") then
		warn("No dropped gun to teleport to.")
		return
	end

	local gunDrop = map:FindFirstChild("GunDrop")
	local prevPos = localplayer.Character:GetPivot()
	localplayer.Character:PivotTo(gunDrop:GetPivot())
	localplayer.Backpack.ChildAdded:Wait()
	localplayer.Character:PivotTo(prevPos)
end

-- // SHOOT FUNCTION
local function shootMurderer()
	local murderer = findMurderer()
	if not murderer or not murderer.Character or not murderer.Character:FindFirstChild("HumanoidRootPart") then
		warn("No murderer found.")
		return
	end

	-- make sure we have a gun
	local char = localplayer.Character
	if not char:FindFirstChild("Gun") then
		local hum = char:FindFirstChild("Humanoid")
		if localplayer.Backpack:FindFirstChild("Gun") then
			hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
		else
			warn("No gun found in backpack.")
			return
		end
	end

	local shootOffset = 15
	local predictedPosition = getPredictedPosition(murderer, shootOffset)
	local args = { [1] = 1, [2] = predictedPosition, [3] = "AH2" }

	char.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
end

-- // CONNECT BUTTONS
GrabGunButton.MouseButton1Click:Connect(grabGun)
ShootButton.MouseButton1Click:Connect(shootMurderer)
