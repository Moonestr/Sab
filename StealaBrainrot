-- LocalScript: поместить в StarterPlayer > StarterPlayerScripts. ТОЛЬКО для локальных тестов / демонстраций в Studio.
-- Поведение: создаёт визуальный клон персонажа и управляет им; твой реальный персонаж остаётся под контролем сервера.
-- Это не чит и не обходит античит.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

local FLY_SPEED = 60
local SMOOTH = 0.12
local cloneModel = nil
local active = false

local function createVisualClone(character)
if not character then return nil end
local clone = Instance.new("Model")
clone.Name = "VisualFlyClone"
-- клонируем видимые части (Head, Torso, Limbs, Accessories)
for _, obj in ipairs(character:GetDescendants()) do
if obj:IsA("BasePart") then
local p = obj:Clone()
p.Anchored = true
p.CanCollide = false
p.Parent = clone
elseif obj:IsA("Accessory") then
local a = obj:Clone()
a.Parent = clone
end
end
clone.Parent = workspace
return clone
end

local function syncCloneToCharacter(clone, character)
if not clone or not character then return end
for _, part in ipairs(clone:GetChildren()) do
if part:IsA("BasePart") then
local orig = character:FindFirstChild(part.Name, true) -- по имени в иерархии
if orig and orig:IsA("BasePart") then
pcall(function() part.CFrame = orig.CFrame end)
end
end
end
end

local function getCameraMoveVector(keys)
local cam = workspace.CurrentCamera
if not cam then return Vector3.new(0,0,0) end
local forward = cam.CFrame.LookVector
local right = cam.CFrame.RightVector
local mv = Vector3.new(0,0,0)
if keys[Enum.KeyCode.W] then mv = mv + forward end
if keys[Enum.KeyCode.S] then mv = mv - forward end
if keys[Enum.KeyCode.A] then mv = mv - right end
if keys[Enum.KeyCode.D] then mv = mv + right end
if keys[Enum.KeyCode.Space] then mv = mv + Vector3.new(0,1,0) end
if keys[Enum.KeyCode.LeftControl] then mv = mv - Vector3.new(0,1,0) end
if mv.Magnitude > 0 then mv = mv.Unit * FLY_SPEED end
return mv
end

local keys = {}
UserInputService.InputBegan:Connect(function(i,gp) if i.UserInputType==Enum.UserInputType.Keyboard then keys[i.KeyCode]=true end end)
UserInputService.InputEnded:Connect(function(i,gp) if i.UserInputType==Enum.UserInputType.Keyboard then keys[i.KeyCode]=nil end end)

-- Toggle fly with E
UserInputService.InputBegan:Connect(function(input, processed)
if processed then return end
if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.E then
active = not active
if active then
local char = player.Character or player.CharacterAdded:Wait()
cloneModel = createVisualClone(char)
-- optionally hide local camera subject (not changing server)
workspace.CurrentCamera.CameraSubject = cloneModel:FindFirstChildWhichIsA("BasePart") or char:FindFirstChildOfClass("Humanoid")
else
if cloneModel then
cloneModel:Destroy()
cloneModel = nil
end
-- restore camera
local char = player.Character
if char then
local hum = char:FindFirstChildOfClass("Humanoid")
if hum then workspace.CurrentCamera.CameraSubject = hum end
end
end
end
end)

local vel = Vector3.new(0,0,0)
RunService.RenderStepped:Connect(function(dt)
if not active or not cloneModel then return end
local char = player.Character
if not char then return end
-- управление визуальным клоном: смещаем все клонированные части плавно
local desired = getCameraMoveVector(keys)
vel = vel:Lerp(desired, SMOOTH)
for _, part in ipairs(cloneModel:GetChildren()) do
if part:IsA("BasePart") then
part.CFrame = part.CFrame + vel * dt
end
end
-- камера следует за клоном (используем CFrame камеры)
local primary = cloneModel:FindFirstChild("HumanoidRootPart") or cloneModel:FindFirstChildWhichIsA("BasePart")
if primary then
workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(primary.CFrame * CFrame.new(0, 2, 6), 0.2)
end
end)

-- При респе/выходе — чистим
player.CharacterRemoving:Connect(function()
if cloneModel then cloneModel:Destroy(); cloneModel = nil end
end)

-- Конец локального визуального флая
return nil
