-- LocalScript -> положите в StarterPlayer > StarterPlayerScripts
-- Описание: F переключает ragdoll-подобный режим, E переключает fly.
-- Скрипт клиентский: изменяет только локальную физику игрока (для тестирования/эффектов в собственной игре).

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local RAGDOLL_KEY = Enum.KeyCode.F
local FLY_KEY = Enum.KeyCode.E

local flyActive = false
local ragdollActive = false

local BV, BG -- BodyVelocity, BodyGyro (для полёта)
local moveState = {W=false, A=false, S=false, D=false, Up=false, Down=false}
local flySpeed = 80 -- можно менять
local verticalSpeed = 50

-- Utility: получить character & humanoid & hrp
local function getChar()
local char = player.Character
if char and char.Parent then
local humanoid = char:FindFirstChildOfClass("Humanoid")
local hrp = char:FindFirstChild("HumanoidRootPart")
return char, humanoid, hrp
end
return nil, nil, nil
end

-- Включаем ragdoll-подобный режим
local function enableRagdoll()
local char, humanoid, hrp = getChar()
if not humanoid or not hrp then return end

```
-- Сохраняем текущую скорость (чтобы при выходе можно было её учесть)
local vel = hrp.AssemblyLinearVelocity

-- Переводим Humanoid в физическое состояние
-- (не ломает моторы, даёт физическое поведение)
pcall(function() humanoid:ChangeState(Enum.HumanoidStateType.Physics) end)
humanoid.PlatformStand = true

-- Немного толчка для наглядности ragdoll-эффекта
hrp.AssemblyLinearVelocity = vel

ragdollActive = true
```

end

-- Выключаем ragdoll-подобный режим (возвращаем управление аниматору)
local function disableRagdoll()
local char, humanoid, hrp = getChar()
if not humanoid or not hrp then return end

```
-- Выключаем физическое состояние
-- Снимаем PlatformStand, возвращаем состояние стоя (Running или GettingUp)
humanoid.PlatformStand = false
pcall(function() humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) end)

ragdollActive = false
```

end

-- Включаем полёт (локально)
local function enableFly()
local char, humanoid, hrp = getChar()
if not humanoid or not hrp then return end

```
-- Если есть старые объекты — удаляем
if BV and BV.Parent then BV:Destroy() end
if BG and BG.Parent then BG:Destroy() end

BV = Instance.new("BodyVelocity")
BV.Name = "LocalFly_BV"
BV.MaxForce = Vector3.new(1e5, 1e5, 1e5)
BV.P = 3000
BV.Velocity = Vector3.new(0,0,0)
BV.Parent = hrp

BG = Instance.new("BodyGyro")
BG.Name = "LocalFly_BG"
BG.MaxTorque = Vector3.new(1e5,1e5,1e5)
BG.P = 3000
BG.CFrame = hrp.CFrame
BG.Parent = hrp

-- Заблокируем стандартную гравитацию/прыжки локально
humanoid.PlatformStand = true

flyActive = true
```

end

-- Выключаем полёт
local function disableFly()
local char, humanoid, hrp = getChar()
if BV and BV.Parent then BV:Destroy() end
if BG and BG.Parent then BG:Destroy() end
BV, BG = nil, nil

```
if humanoid then
    humanoid.PlatformStand = false
end

flyActive = false
```

end

-- Обработка нажатий WASD/Space для движения в полёте
UserInputService.InputBegan:Connect(function(input, processed)
if processed then return end
if input.KeyCode == Enum.KeyCode.W then moveState.W = true end
if input.KeyCode == Enum.KeyCode.S then moveState.S = true end
if input.KeyCode == Enum.KeyCode.A then moveState.A = true end
if input.KeyCode == Enum.KeyCode.D then moveState.D = true end
if input.KeyCode == Enum.KeyCode.Space then moveState.Up = true end
if input.KeyCode == Enum.KeyCode.LeftControl then moveState.Down = true end

```
-- Переключатели клавиш
if input.KeyCode == RAGDOLL_KEY then
    if ragdollActive then
        disableRagdoll()
    else
        -- если летим — сначала выключим полёт, затем ragdoll
        if flyActive then disableFly() end
        enableRagdoll()
    end
end

if input.KeyCode == FLY_KEY then
    if flyActive then
        disableFly()
    else
        -- если в ragdoll — сначала выключаем ragdoll (чтобы не конфликтовали)
        if ragdollActive then disableRagdoll() end
        enableFly()
    end
end
```

end)

UserInputService.InputEnded:Connect(function(input, processed)
if input.KeyCode == Enum.KeyCode.W then moveState.W = false end
if input.KeyCode == Enum.KeyCode.S then moveState.S = false end
if input.KeyCode == Enum.KeyCode.A then moveState.A = false end
if input.KeyCode == Enum.KeyCode.D then moveState.D = false end
if input.KeyCode == Enum.KeyCode.Space then moveState.Up = false end
if input.KeyCode == Enum.KeyCode.LeftControl then moveState.Down = false end
end)

-- Основной цикл: обновление скорости полёта
RunService.RenderStepped:Connect(function(dt)
if not flyActive then return end
local char, humanoid, hrp = getChar()
if not char or not humanoid or not hrp then
disableFly()
return
end

```
local cam = workspace.CurrentCamera
local look = cam.CFrame.LookVector
local right = cam.CFrame.RightVector
local moveVec = Vector3.new(0,0,0)

if moveState.W then moveVec = moveVec + Vector3.new(look.X, 0, look.Z) end
if moveState.S then moveVec = moveVec - Vector3.new(look.X, 0, look.Z) end
if moveState.A then moveVec = moveVec - Vector3.new(right.X, 0, right.Z) end
if moveState.D then moveVec = moveVec + Vector3.new(right.X, 0, right.Z) end
moveVec = moveVec.Unit
if moveVec ~= moveVec then moveVec = Vector3.new(0,0,0) end -- защитa от NaN

local vertical = 0
if moveState.Up then vertical = vertical + verticalSpeed end
if moveState.Down then vertical = vertical - verticalSpeed end

-- Финальная скорость
local targetVel = (moveVec * flySpeed) + Vector3.new(0, vertical, 0)

if BV then
    BV.Velocity = Vector3.new(targetVel.X, targetVel.Y, targetVel.Z)
end

if BG then
    -- Поворачиваем туловище в направлении камеры плавно
    BG.CFrame = CFrame.new(hrp.Position, hrp.Position + cam.CFrame.LookVector)
end
```

end)

-- Очистка при смерти/смене персонажа
player.CharacterRemoving:Connect(function()
disableFly()
disableRagdoll()
end)

player.CharacterAdded:Connect(function(char)
-- небольшой лаг, чтобы humanoid/parts появились
wait(0.1)
-- сброс состояний
disableFly()
disableRagdoll()
end)

-- Конечный совет:
-- - Настройте flySpeed и verticalSpeed по вкусу.
-- - Для server-стабильности/синхронизации эффектов (если хотите, чтобы регдолл виделся всем игрокам)
--   нужно реализовать серверный вариант (серверный Script), который корректно управляет Motor6D/Constraints.
--   Здесь же — полностью клиентская версия для безопасного локального теста.
