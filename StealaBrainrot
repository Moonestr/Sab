-- LocalScript: положите в StarterPlayer > StarterPlayerScripts и запускайте через Play в Roblox Studio.
-- Горячие клавиши:
-- K — Freeze: визуально "замораживает" всех других игроков.
-- J — Jerky: рывки у всех других игроков.
-- Локальный персонаж (LocalPlayer) НЕ затрагивается.

local Players = game("Players")
local UserInputService = game("UserInputService")

local localPlayer = Players.LocalPlayer

-- ================== CONFIG ==================
local FREEZE_DURATION = 8 -- длительность freeze (сек)
local JERKY_DURATION = 8 -- длительность jerky (сек)
local JERKY_INTERVAL = 0.25 -- интервал рывков
local JERKY_TELEPORT_SIZE = 1.2 -- сила рывка
local MAX_DURATION = 300
-- ============================================

local stateStore = {}

local function safeFindHumanoid(char)
if not char then return nil end
return char("Humanoid")
end

local function safeFindRoot(char)
if not char then return nil end
return char("HumanoidRootPart") or char("Torso") or char("UpperTorso")
end

local function saveState(char)
if not char or not char.Parent then return end
if stateStore[char] then return end
local s = {}
local humanoid = safeFindHumanoid(char)
local root = safeFindRoot(char)
if humanoid then
s.platformStand = humanoid.PlatformStand
s.walkSpeed = humanoid.WalkSpeed
s.jumpPower = humanoid.JumpPower or humanoid.JumpHeight
if humanoid.AutoRotate ~= nil then s.autoRotate = humanoid.AutoRotate end
end
if root then
s.anchored = root.Anchored
s.rootCFrame = root.CFrame
end
stateStore[char] = s
end

local function restoreState(char)
if not char then return end
local s = stateStore[char]
if not s then return end
local humanoid = safeFindHumanoid(char)
local root = safeFindRoot(char)
pcall(function()
if humanoid then
if s.platformStand ~= nil then humanoid.PlatformStand = s.platformStand end
if s.walkSpeed ~= nil then humanoid.WalkSpeed = s.walkSpeed end
if s.jumpPower ~= nil and humanoid.JumpPower ~= nil then humanoid.JumpPower = s.jumpPower end
if s.autoRotate ~= nil and humanoid.AutoRotate ~= nil then humanoid.AutoRotate = s.autoRotate end
end
if root and s.anchored ~= nil then root.Anchored = s.anchored end
if root and s.rootCFrame then
root.CFrame = s.rootCFrame
end
end)
stateStore[char] = nil
end

-- Freeze для всех КРОМЕ localPlayer
local function applyFreezeToAll(enable)
for _, pl in ipairs(Players()) do
if pl ~= localPlayer then
local char = pl.Character
if char then
saveState(char)
local humanoid = safeFindHumanoid(char)
local root = safeFindRoot(char)
pcall(function()
if enable then
if humanoid then
humanoid.PlatformStand = true
if humanoid.AutoRotate ~= nil then humanoid.AutoRotate = false end
if humanoid.WalkSpeed ~= nil then humanoid.WalkSpeed = 0 end
if humanoid.JumpPower ~= nil then humanoid.JumpPower = 0 end
end
if root then root.Anchored = true end
else
restoreState(char)
end
end)
end
end
end
end

-- Рывки для всех КРОМЕ localPlayer
local function performSmallTeleportOnAll()
for _, pl in ipairs(Players()) do
if pl ~= localPlayer then
local char = pl.Character
if char then
local root = safeFindRoot(char)
if root then
pcall(function()
local orig = root.CFrame
local dx = (math.random() - 0.5) * JERKY_TELEPORT_SIZE
local dz = (math.random() - 0.5) * JERKY_TELEPORT_SIZE
local dy = (math.random() - 0.5) * (JERKY_TELEPORT_SIZE * 0.3)
root.CFrame = orig * CFrame.new(dx, dy, dz)
delay(0.08, function()
pcall(function() if root then root.CFrame = orig end end)
end)
end)
end
end
end
end
end

-- Запуск режимов
local function runJerky(duration, interval)
duration = math.min(duration or JERKY_DURATION, MAX_DURATION)
interval = math.max(interval or JERKY_INTERVAL, 0.05)
local t0 = tick()
while tick() - t0 < duration do
performSmallTeleportOnAll()
wait(interval)
end
for char in pairs(stateStore) do
restoreState(char)
end
end

local function runFreeze(duration)
duration = math.min(duration or FREEZE_DURATION, MAX_DURATION)
applyFreezeToAll(true)
delay(duration, function()
for char in pairs(stateStore) do
restoreState(char)
end
end)
end

-- Горячие клавиши
UserInputService.InputBegan(function(input, processed)
if processed then return end
if input.UserInputType == Enum.UserInputType.Keyboard then
if input.KeyCode == Enum.KeyCode.K then
runFreeze(FREEZE_DURATION)
elseif input.KeyCode == Enum.KeyCode.J then
spawn(function() runJerky(JERKY_DURATION, JERKY_INTERVAL) end)
end
end
end)
