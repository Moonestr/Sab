local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true

-- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 220)
frame.Position = UDim2.new(0.5, -110, 0.5, -110)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 20)
frameCorner.Parent = frame

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, -20, 0, 25)
textLabel.Position = UDim2.new(0, 10, 0, 20)
textLabel.BackgroundTransparency = 1
textLabel.Text = "Flux Premium"
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabel.Font = Enum.Font.SourceSansBold
textLabel.TextScaled = true
textLabel.Parent = frame

-- –ü–æ–ª–æ—Å–∫–∞ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
local bar = Instance.new("Frame")
bar.Size = UDim2.new(0, textLabel.TextBounds.X, 0, 4)
bar.Position = UDim2.new(0.5, -textLabel.TextBounds.X/2, 0, 50)
bar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
bar.BorderSizePixel = 0
bar.Parent = frame

textLabel:GetPropertyChangedSignal("Text"):Connect(function()
	local width = textLabel.TextBounds.X
	bar.Size = UDim2.new(0, width, 0, 4)
	bar.Position = UDim2.new(0.5, -width/2, 0, 50)
end)

-- –ö–Ω–æ–ø–∫–∞ "Activate"
local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 160, 0, 40)
toggle.Position = UDim2.new(0.5, -80, 1, -145)
toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggle.Text = "Activate"
toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
toggle.Font = Enum.Font.SourceSansBold
toggle.TextScaled = true
toggle.Parent = frame

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 20)
toggleCorner.Parent = toggle

local active = false
toggle.MouseButton1Click:Connect(function()
	active = not active
	if active then
		toggle.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
		print("Activated")
	else
		toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		print("Deactivated")
	end
end)

-- –ö–Ω–æ–ø–∫–∞ "Desync"
local desyncButton = Instance.new("TextButton")
desyncButton.Size = UDim2.new(0, 160, 0, 40)
desyncButton.Position = UDim2.new(0.5, -80, 1, -95)
desyncButton.BackgroundColor3 = Color3.fromRGB(200, 0, 200)
desyncButton.Text = "Desync"
desyncButton.TextColor3 = Color3.fromRGB(255, 255, 255)
desyncButton.Font = Enum.Font.SourceSansBold
desyncButton.TextScaled = true
desyncButton.Parent = frame

local desyncCorner = Instance.new("UICorner")
desyncCorner.CornerRadius = UDim.new(0, 20)
desyncCorner.Parent = desyncButton

local TweenService = game:GetService("TweenService")

desyncButton.MouseButton1Click:Connect(function()
	print("Desync started!")

	local moveFrame = Instance.new("Frame")
	moveFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	moveFrame.Size = UDim2.new(1, 0, 1, 0)
	moveFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	moveFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	moveFrame.BackgroundTransparency = 0
	moveFrame.BorderSizePixel = 0
	moveFrame.Parent = screenGui

	local moveText = Instance.new("TextLabel")
	moveText.Size = UDim2.new(1, 0, 1, 0)
	moveText.Position = UDim2.new(0, 0, 0, 0)
	moveText.BackgroundTransparency = 1
	moveText.Text = "Moving..."
	moveText.TextColor3 = Color3.fromRGB(255, 255, 255)
	moveText.Font = Enum.Font.SourceSansBold
	moveText.TextScaled = true
	moveText.Parent = moveFrame

	local tweenIn = TweenService:Create(moveFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
	tweenIn:Play()

	task.delay(2, function()
		local tweenOut = TweenService:Create(moveFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 1})
		tweenOut:Play()
		tweenOut.Completed:Connect(function()
			moveFrame:Destroy()
		end)
	end)
end)

-- –ö–Ω–æ–ø–∫–∞ "Tp base"
local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 160, 0, 40)
button.Position = UDim2.new(0.5, -80, 1, -45)
button.BackgroundColor3 = Color3.fromRGB(0, 102, 255)
button.Text = "Tp base"
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.SourceSansBold
button.TextScaled = true
button.Parent = frame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 20)
buttonCorner.Parent = button

button.MouseButton1Click:Connect(function()
	print("–¢–µ–ª–µ–ø–æ—Ä—Ç –Ω–∞ –±–∞–∑—É!")

	local teleportFrame = Instance.new("Frame")
	teleportFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	teleportFrame.Size = UDim2.new(1, 0, 1, 0)
	teleportFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	teleportFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	teleportFrame.BackgroundTransparency = 0
	teleportFrame.BorderSizePixel = 0
	teleportFrame.Parent = screenGui

	local teleportText = Instance.new("TextLabel")
	teleportText.Size = UDim2.new(1, 0, 1, 0)
	teleportText.Position = UDim2.new(0, 0, 0, 0)
	teleportText.BackgroundTransparency = 1
	teleportText.Text = "Teleporting..."
	teleportText.TextColor3 = Color3.fromRGB(255, 255, 255)
	teleportText.Font = Enum.Font.SourceSansBold
	teleportText.TextScaled = true
	teleportText.Parent = teleportFrame

	local tweenIn = TweenService:Create(teleportFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
	tweenIn:Play()

	task.delay(6, function()
		local tweenOut = TweenService:Create(teleportFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 1})
		tweenOut:Play()
		tweenOut.Completed:Connect(function()
			teleportFrame:Destroy()
		end)
	end)
end)

-- üì±üñ± –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –º–µ–Ω—é (–ü–ö + —Ç–µ–ª–µ—Ñ–æ–Ω)
local UserInputService = game:GetService("UserInputService")
local dragging = false
local dragStart
local startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 
	or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement 
	or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement 
	or input.UserInputType == Enum.UserInputType.Touch) then
		
		local delta = input.Position - dragStart
		local newX = startPos.X.Offset + delta.X
		local newY = startPos.Y.Offset + delta.Y

		-- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: —á—Ç–æ–±—ã –º–µ–Ω—é –Ω–µ –≤—ã—Ö–æ–¥–∏–ª–æ –∑–∞ —ç–∫—Ä–∞–Ω
		local screenSize = workspace.CurrentCamera.ViewportSize
		newX = math.clamp(newX, 0, screenSize.X - frame.AbsoluteSize.X)
		newY = math.clamp(newY, 0, screenSize.Y - frame.AbsoluteSize.Y)

		frame.Position = UDim2.new(0, newX, 0, newY)
	end
end)
